---
interface Props {
  iconClass: string;
}

const { iconClass } = Astro.props;
---

<button id="themeToggle" class="block w-full pb-6 text-xl text-slate-800 dark:text-white md:w-auto md:pb-0">
  <i id="themeIcon" class={`fa-solid ${iconClass} min-w-[20px]`}></i>
  <!-- Dynamic icon class -->
</button>

<script>
  const themeToggle = document.getElementById('themeToggle');
  const themeIcon = document.getElementById('themeIcon');

  const storageTheme = localStorage.getItem('theme');
  let savedTheme = storageTheme;
  if (savedTheme === 'dark') {
    document.documentElement.classList.replace('light', 'dark');
    themeIcon.classList.replace('fa-sun', 'fa-moon');
  } else {
    document.documentElement.classList.replace('dark', 'light');
    themeIcon.classList.replace('fa-moon', 'fa-sun');
  }

  // Check for saved user theme preference
  if (localStorage.getItem('theme') === 'dark') {
    document.documentElement.classList.replace('light', 'dark');
    themeIcon.classList.replace('fa-sun', 'fa-moon');
  } else {
    document.documentElement.classList.replace('dark', 'light');
    themeIcon.classList.replace('fa-moon', 'fa-sun');
  }

  themeToggle.addEventListener('click', () => {
    document.startViewTransition(() => {
      const newTheme = savedTheme === 'light' ? 'dark' : 'light';
      savedTheme = newTheme;
      localStorage.setItem('theme', newTheme);

      if (newTheme === 'dark') {
        document.documentElement.classList.replace('light', 'dark');
        themeIcon.classList.replace('fa-sun', 'fa-moon');
        localStorage.setItem('theme', 'dark');
      } else {
        document.documentElement.classList.replace('dark', 'light');
        themeIcon.classList.replace('fa-moon', 'fa-sun');
        localStorage.setItem('theme', 'light');
      }
    });
  });
</script>
