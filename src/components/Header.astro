---
declare global {
  interface Document {
    startViewTransition: (callback: () => void) => void;
  }
  interface Element {
    style: any
  }
}
---

<header 
  class={`
  z-20 sticky top-0 
  md:flex md:justify-between md:items-center dark:md:bg-[#1f242d] md:bg-slate-100
  `}
>
  <div 
    class={`
    flex justify-between items-center z-10 dark:bg-[#1f242d] bg-slate-100
    w-full h-full 
    px-4 py-2 
    sm:px-10 sm:py-4 
    md:px-0 md:pl-12 
    lg:pl-24 
    xl:py-5 xl:pl-24 xl:min-h-[10vh] 
    2xl:py-5 2xl:pl-40 2xl:min-h[10vh] 
    `}
  >
    <a id="scrollToHomeBtn" href="#" class="relative flex items-center gap-2 xl:gap-4">
      <div class="absolute top-0 left-0 size-12 xl:size-14 dark:bg-gradient-radial-dark bg-gradient-radial-light"></div>
      <img 
        src="./img/logo.webp" 
        alt="GuzH Logo" 
        class="size-12 xl:size-14" 
      >
      <h1 class="text-xl hidden md:block dark:text-white text-slate-800">GuzH</h1>
    </a>

    <button id="menuToggle" class="text-2xl md:hidden">
      <i class="fa-solid fa-bars dark:text-white text-slate-800" id="menuIcon"></i>
    </button>
  </div>

  <div class="w-full">
    <nav 
      id="navbar" 
      class={`
      bg-slate-100 dark:bg-[#1f242d] transform -translate-y-full transition duration-300 
      absolute top-full left-0 right-0 
      py-6 px-4 -z-10 
      text-center shadow-[0_10px_25px_#171a21_inset]
      md:flex md:flex-row md:justify-end md:gap-x-14 md:text-xl md:py-0 md:bg-transparent md:pr-12 md:static md:shadow-none md:translate-y-0
      lg:pr-24 md:transition-none
      xl:pr-24
      2xl:pr-40
      `}
    >
      <!-- Eng/Esp Mode Toggle Button -->
      <button id="languageToggle" class="flex justify-center w-full md:block md:size-7 pb-6 md:pb-0" data-lang="eng">
        <img 
          src="./img/eng.avif" 
          alt="UK Flag" 
          class="size-7 object-cover" 
        >
      </button>
      
      <button id="languageToggle" class="flex justify-center w-full md:block md:size-7 pb-6 md:pb-0" data-lang="es">
        <img 
          src="./img/esp.avif" 
          alt="ESP Flag" 
          class="size-7 object-cover" 
        >
      </button>
      
      <!-- Dark/Light Mode Toggle Button -->
      <button id="themeToggle" class="block w-full md:w-auto text-xl pb-6 md:pb-0 dark:text-white text-slate-800">
        <i id="themeIcon" class="fa-solid fa-moon"></i> <!-- Default to moon icon -->
      </button>

      <a id="scrollToHomeBtn" href="#" class="block text-xl pb-6 md:pb-0 dark:text-white text-slate-800 whitespace-nowrap" data-lang="eng">Home</a>
      <a id="scrollToAboutBtn" href="#about" class="block text-xl pb-6 md:pb-0 dark:text-white text-slate-800 whitespace-nowrap" data-lang="eng">About</a>
      <a id="scrollToPortfolioBtn" href="#portfolio" class="block text-xl md:pb-0 dark:text-white text-slate-800 whitespace-nowrap" data-lang="eng">Portfolio</a> 

      <a id="scrollToHomeBtn" href="#" class="block text-xl pb-6 md:pb-0 dark:text-white text-slate-800 whitespace-nowrap" data-lang="es">Inicio</a>
      <a id="scrollToAboutBtn" href="#about" class="block text-xl pb-6 md:pb-0 dark:text-white text-slate-800 whitespace-nowrap" data-lang="es">Sobre Mi</a>
      <a id="scrollToPortfolioBtn" href="#portfolio" class="block text-xl md:pb-0 dark:text-white text-slate-800 whitespace-nowrap" data-lang="es">Portfolio</a> 
    </nav>
  </div>
</header>

<script>
  // JavaScript to handle the navbar toggle
  const menuToggle = document.getElementById('menuToggle');
  const navbar = document.getElementById('navbar');
  const menuIcon = document.getElementById('menuIcon');
  const scrollToHomeBtn = document.querySelectorAll('[id=scrollToHomeBtn]');
  const scrollToAboutBtn = document.getElementById('scrollToAboutBtn');
  const scrollToPortfolioBtn = document.getElementById('scrollToPortfolioBtn');

  const themeToggle = document.getElementById('themeToggle');
  const themeIcon = document.getElementById('themeIcon');

  const languageToggle = document.querySelectorAll('[id=languageToggle]');

  menuToggle.addEventListener('click', () => {
    navbar.classList.toggle('-translate-y-full');
    if (menuIcon.classList.contains('fa-bars')) {
      menuIcon.classList.replace('fa-bars','fa-xmark');
    } else {
      menuIcon.classList.replace('fa-xmark','fa-bars');
    }
  });

  for (let i = 0; i < scrollToHomeBtn.length; i++) {
    // Scroll to the top of the page when the button is clicked
    scrollToHomeBtn[i].addEventListener('click', (event) => {
      event.preventDefault();

      window.scrollTo({
        top: 0,
        behavior: 'smooth' // Smooth scrolling effect
      });
    });
  }
  

  // Scroll to the center of the about section when the button is clicked
  scrollToAboutBtn.addEventListener('click', (event) => {
    event.preventDefault();

    // Get the href attribute of the about button
    const aboutSection = document.querySelector('#about');
    const aboutSectionTop = aboutSection.getBoundingClientRect().top + window.scrollY;
    const offset = window.innerHeight / 2 - aboutSection.clientHeight / 2;  // Adjust the offset for centering

    // Smoothly scroll to the center of the about section
    window.scrollTo({
      top: aboutSectionTop - offset,
      behavior: 'smooth'
    });
  });

  // Scroll to the center of the about section when the button is clicked
  scrollToPortfolioBtn.addEventListener('click', () => {
    document.querySelector('#portfolio').scrollIntoView({
      behavior: 'smooth',
      block: 'start',
    });
  });

  // Add event listener for theme toggle
  themeToggle.addEventListener('click', () => {
    document.startViewTransition(() => {
      if (document.documentElement.classList.contains('dark')) {
        document.documentElement.classList.replace('dark','light');
        themeIcon.classList.replace('fa-moon', 'fa-sun');
        localStorage.setItem('theme', 'light');
      } else {
        document.documentElement.classList.replace('light','dark');
        themeIcon.classList.replace('fa-sun', 'fa-moon');
        localStorage.setItem('theme', 'dark');
      }
    })
  });

  // Check for saved user theme preference
  if (localStorage.getItem('theme') === 'dark') {
    document.documentElement.classList.replace('light','dark');
    themeIcon.classList.replace('fa-sun', 'fa-moon');
  } else {
    document.documentElement.classList.replace('dark','light');
    themeIcon.classList.replace('fa-moon', 'fa-sun');
  }

  // Retrieve the saved language preference from localStorage or default to 'eng'
  let currentLanguage = localStorage.getItem('language') || 'eng';

  // Initialize elements with data-lang and store their original display style
  document.querySelectorAll('[data-lang]').forEach((el) => {
    el.setAttribute('data-original-display', getComputedStyle(el).display);
  });

  for (let i = 0; i < languageToggle.length; i++) {
    // Attach click event listener to the button
    languageToggle[i].addEventListener('click', () => {
      document.startViewTransition(() => {
        currentLanguage = currentLanguage === 'eng' ? 'es' : 'eng';
        localStorage.setItem('language', currentLanguage); // Save preference in localStorage
        updatePageContent(currentLanguage); // Function to change page content based on language
      })
    });
  }

  // Function to update page content based on the selected language
  function updatePageContent(language) {
    const allElements = document.querySelectorAll('[data-lang]');
    allElements.forEach((el) => {
      if (el.getAttribute('data-lang') === language.toLowerCase()) {
        el.style.display = el.getAttribute('data-original-display');
      } else {
        el.style.display = 'none';
      }
    });
  }

  // Initialize the content based on the saved language
  updatePageContent(currentLanguage);
</script>