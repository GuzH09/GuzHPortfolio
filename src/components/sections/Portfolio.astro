---
import PortfolioItem from './PortfolioItem.astro';
import type { ImageMetadata } from 'astro';
import { getLangFromUrl, useTranslations } from '@/i18n/utils';
import { getEntry } from 'astro:content';

const lang = getLangFromUrl(Astro.url);
const contentData = await getEntry('portfolio', `${lang}/portfolio`);
const t = useTranslations(lang);
---

<section
  class={`
  flex min-h-[100vh] mx-auto flex-col items-center 
  pt-20 
  lg:pb-40 lg:pt-40 
  xl:pb-60
  2xl:max-w-[1440px] 2xl:pt-0 2xl:pb-0
  `}
  {...Astro.props}
  data-aos="fade-up"
  data-aos-easing="ease-in"
  data-aos-once="true"
  data-aos-anchor-placement="top-bottom"
>
  <h3
    class="mb-4 w-full text-center text-sm font-bold text-[hsl(217,33%,17%)] dark:text-white sm:text-4xl md:text-3xl lg:text-3xl xl:text-3xl 2xl:text-4xl"
  >
    <i class="fa-solid fa-caret-right mr-2"></i>
    {contentData.data.web.title}
  </h3>
  <div class="mb-8 flex flex-wrap justify-center space-x-4">
    <button
      class="filter-btn mb-4 rounded-full border border-[#1d283a] bg-gray-200 px-4 py-2 text-gray-700 dark:border-white dark:bg-gray-700 dark:text-white"
      data-filter="All">{t('portfolio.filter.all')}</button
    >
    <button class="filter-btn mb-4 rounded-full bg-gray-200 px-4 py-2 text-gray-700 dark:bg-gray-700 dark:text-white" data-filter="Fun Projects"
      >{t('portfolio.filter.fun')}</button
    >
    <button class="filter-btn mb-4 rounded-full bg-gray-200 px-4 py-2 text-gray-700 dark:bg-gray-700 dark:text-white" data-filter="E-Commerces"
      >{t('portfolio.filter.ecommerce')}</button
    >
    <button
      class="filter-btn mb-4 rounded-full bg-gray-200 px-4 py-2 text-gray-700 dark:bg-gray-700 dark:text-white"
      data-filter="Landing Pages & Static Sites">{t('portfolio.filter.landing')}</button
    >
    <button class="filter-btn mb-4 rounded-full bg-gray-200 px-4 py-2 text-gray-700 dark:bg-gray-700 dark:text-white" data-filter="Mobile Apps"
      >{t('portfolio.filter.mobile')}</button
    >
  </div>
  <div
    class={` 
    grid grid-cols-1 gap-6 text-center pb-16 sm:gap-6 
    lg:grid-cols-2 lg:w-full lg:pb-40 lg:justify-items-center
    xl:grid-cols-3 xl:w-auto xl:pb-40 
    2xl:grid-cols-3 2xl:w-auto 2xl:pb-40 2xl:gap-14
    `}
  >
    {
      contentData.data.web.projects.map((project) => (
        <div class="project-item lg:w-[420px] xl:w-auto 2xl:w-auto" data-title={project.title}>
          <PortfolioItem
            class="lg:w-[420px] xl:w-auto 2xl:w-auto"
            src={project.images[0] as ImageMetadata}
            alt={project.title}
            title={project.title}
            description={project.description}
            link={project.link}
            slug={'/' + lang + '/projects/' + project.slug}
          />
        </div>
      ))
    }
  </div>
  <script is:inline>
    document.addEventListener('astro:page-load', function () {
      const projectItems = document.querySelectorAll('.project-item');
      const filterButtons = document.querySelectorAll('.filter-btn');
      const filters = {
        All: Array.from(projectItems).map((item) => item.getAttribute('data-title')),
        'Fun Projects': ['RandomPong', 'YouTube Subs Manager', 'Â¿Se Viene?', 'F1 Race Position Tracker'],
        'E-Commerces & Web Apps': ['Gaukin Web App', 'MGM Market', 'Astro Ecommerce'],
        'Landing Pages & Static Sites': [
          'Play Safe AR',
          'Pomberito',
          'The Path Into The Abyss',
          'Gauchos Inmortales',
          'Cordoba Bus Gamer',
          // 'Cordoba Gamer',
        ],
        'Mobile Apps': ['MiFulbo'],
      };
      filterButtons.forEach((btn) => {
        btn.addEventListener('click', () => {
          filterButtons.forEach((b) => {
            b.classList.remove('dark:border-white', 'border', 'border-[#1d283a]');
          });
          btn.classList.add('dark:border-white', 'border', 'border-[#1d283a]');
          const filter = btn.getAttribute('data-filter');
          const titlesToShow = filters[filter];
          projectItems.forEach((item) => {
            const title = item.getAttribute('data-title');
            if (filter === 'All' || titlesToShow.includes(title)) {
              item.removeAttribute('hidden');
            } else {
              item.setAttribute('hidden', '');
            }
          });
        });
      });
    });
  </script>
</section>
